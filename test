-- Nova Code Hub — versión con opción Noclip + corrección de recorte

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
if not player then return end
local guiParent = player:WaitForChild("PlayerGui")

-- Crear ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "NovaCodeHubGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = guiParent

-- Frame principal del menú
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 260, 0, 40)  -- altura mínima al inicio
mainFrame.Position = UDim2.new(0.5, -130, 0.3, -20)
mainFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true
mainFrame.Parent = screenGui

local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 8)
mainCorner.Parent = mainFrame

-- Barra de título (para arrastrar)
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundTransparency = 1
titleBar.Parent = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(1, -60, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Nova Code Hub"
titleLabel.TextColor3 = Color3.new(1, 1, 1)
titleLabel.TextStrokeTransparency = 0
titleLabel.TextSize = 18
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.Parent = titleBar

-- Botón minimizar / desplegar menú
local toggleMenuButton = Instance.new("TextButton")
toggleMenuButton.Name = "ToggleMenuButton"
toggleMenuButton.Size = UDim2.new(0, 25, 0, 25)
toggleMenuButton.Position = UDim2.new(1, -30, 0, 2)
toggleMenuButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
toggleMenuButton.Text = "-"
toggleMenuButton.TextColor3 = Color3.new(1, 1, 1)
toggleMenuButton.TextStrokeTransparency = 0
toggleMenuButton.Parent = titleBar

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 4)
toggleCorner.Parent = toggleMenuButton

-- Botón flotante si el GUI está minimizado
local floatButton = Instance.new("TextButton")
floatButton.Name = "FloatButton"
floatButton.Size = UDim2.new(0, 60, 0, 30)
floatButton.Position = UDim2.new(0.5, -30, 0.5, -15)
floatButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
floatButton.Text = "Nova"
floatButton.TextColor3 = Color3.new(1, 1, 1)
floatButton.TextStrokeTransparency = 0
floatButton.Visible = false
floatButton.Parent = screenGui

local floatCorner = Instance.new("UICorner")
floatCorner.CornerRadius = UDim new(0, 8)  -- CORREGIDO: UDim not UDim2 typo

floatCorner.CornerRadius = UDim.new(0, 8)
floatCorner.Parent = floatButton

-- Contenedor para secciones
local sectionsContainer = Instance.new("Frame")
sectionsContainer.Name = "SectionsContainer"
sectionsContainer.Size = UDim2.new(1, 0, 1, -30)  -- bajo la barra superior
sectionsContainer.Position = UDim2.new(0, 0, 0, 30)
sectionsContainer.BackgroundTransparency = 1
sectionsContainer.Parent = mainFrame

-- Tabla para manejar secciones
local sections = {}

-- Crear sección desplegable
local function createSection(name)
    local section = {}
    section.Name = name
    section.Expanded = false

    local btn = Instance.new("TextButton")
    btn.Name = name .. "Button"
    btn.Size = UDim2.new(1, 0, 0, 25)
    btn.Position = UDim2.new(0, 0, 0, #sections * 25)
    btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    btn.Text = name .. " ▼"
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.TextStrokeTransparency = 0
    btn.Font = Enum.Font.SourceSans
    btn.TextSize = 16
    btn.Parent = sectionsContainer

    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 4)
    btnCorner.Parent = btn

    local frame = Instance.new("Frame")
    frame.Name = name .. "Frame"
    frame.Size = UDim2.new(1, 0, 0, 0)
    frame.Position = UDim2.new(0, 0, 0, (#sections) * 25)
    frame.BackgroundTransparency = 1
    frame.ClipsDescendants = true
    frame.Parent = sectionsContainer

    section.Button = btn
    section.Frame = frame
    section.Elements = {}

    btn.MouseButton1Click:Connect(function()
        section.Expanded = not section.Expanded
        if section.Expanded then
            btn.Text = name .. " ▲"
        else
            btn.Text = name .. " ▼"
        end

        -- Recalcular posiciones / tamaños
        local yOffset = 0
        for _, sec in ipairs(sections) do
            sec.Button.Position = UDim2.new(0, 0, 0, yOffset)
            local frameH = 0
            if sec.Expanded then
                frameH = #sec.Elements * 30
            end
            sec.Frame.Position = UDim2.new(0, 0, 0, yOffset + 25)
            sec.Frame.Size = UDim2.new(1, 0, 0, frameH)
            -- Posicionar elementos internos
            for i, elem in ipairs(sec.Elements) do
                elem.Position = UDim2.new(0, 0, 0, (i-1) * 30)
            end
            yOffset = yOffset + 25 + frameH
        end

        -- Ajustar tamaño del mainFrame
        local totalHeight = 30 + yOffset
        mainFrame.Size = UDim2.new(mainFrame.Size.X.Scale, mainFrame.Size.X.Offset, 0, totalHeight)
    end)

    table.insert(sections, section)
    return section
end

-- Crear sección “Player”
local playerSection = createSection("Player")

-- Botón de plataforma dentro de Player
local platBtn = Instance.new("TextButton")
platBtn.Name = "PlatToggle"
platBtn.Size = UDim2.new(1, 0, 0, 30)
platBtn.Position = UDim2.new(0, 0, 0, 0)
platBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
platBtn.Text = "Activar Plataforma"
platBtn.TextColor3 = Color3.new(1, 1, 1)
platBtn.TextStrokeTransparency = 0
platBtn.Font = Enum.Font.SourceSans
platBtn.TextSize = 16
platBtn.Parent = playerSection.Frame

local platCorner2 = Instance.new("UICorner")
platCorner2.CornerRadius = UDim.new(0, 4)
platCorner2.Parent = platBtn

table.insert(playerSection.Elements, platBtn)

-- Botón de Noclip dentro de Player
local noclipBtn = Instance.new("TextButton")
noclipBtn.Name = "NoclipToggle"
noclipBtn.Size = UDim2.new(1, 0, 0, 30)
noclipBtn.Position = UDim2.new(0, 0, 0, 30)
noclipBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
noclipBtn.Text = "Activar Noclip"
noclipBtn.TextColor3 = Color3.new(1, 1, 1)
noclipBtn.TextStrokeTransparency = 0
noclipBtn.Font = Enum.Font.SourceSans
noclipBtn.TextSize = 16
noclipBtn.Parent = playerSection.Frame

local noclipCorner = Instance.new("UICorner")
noclipCorner.CornerRadius = UDim.new(0, 4)
noclipCorner.Parent = noclipBtn

table.insert(playerSection.Elements, noclipBtn)

-- Variables de plataforma
local activePlat = false
local currentPlatform = nil
local monitoringPlat = false

-- Variables de Noclip
local activeNoclip = false
local originalCollisions = {}  -- para restaurar colisiones originales

-- Función crear plataforma como antes
local function createPlatform(position)
    if currentPlatform then
        currentPlatform:Destroy()
    end
    local part = Instance.new("Part")
    part.Anchored = true
    part.Size = Vector3.new(6, 1, 6)
    part.Position = position - Vector3.new(0, 3.5, 0)
    part.Material = Enum.Material.SmoothPlastic
    part.Color = Color3.fromRGB(150, 150, 150)
    part.Transparency = 0.4
    part.CanCollide = true
    part.Name = "JumpPlatform"
    part.Parent = workspace
    currentPlatform = part
end

local function monitorJumping()
    if monitoringPlat then return end
    monitoringPlat = true
    coroutine.wrap(function()
        while activePlat do
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                local hrp = character:FindFirstChild("HumanoidRootPart")
                if humanoid and hrp then
                    local state = humanoid:GetState()
                    if state == Enum.HumanoidStateType.Jumping then
                        RunService.RenderStepped:Wait()
                        repeat
                            RunService.RenderStepped:Wait()
                            state = humanoid:GetState()
                        until state == Enum.HumanoidStateType.Freefall
                        createPlatform(hrp.Position)
                    end
                    if state == Enum.HumanoidStateType.Freefall then
                        createPlatform(hrp.Position)
                        repeat
                            RunService.RenderStepped:Wait()
                            state = humanoid:GetState()
                        until state ~= Enum.HumanoidStateType.Freefall
                    end
                end
            end
            RunService.RenderStepped:Wait()
        end
        monitoringPlat = false
    end)()
end

-- Función para activar noclip (atraviesa muros pero no caer al vacío)
local function enableNoclip()
    local character = player.Character
    if not character then return end
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") and part.CanCollide then
            originalCollisions[part] = true
            part.CanCollide = false
        end
    end
    activeNoclip = true
    -- Conexión para garantizar colisión con suelo/floor
    -- Vamos a hacer que cuando el jugador está en caída libre, verificamos si hay suelo justo debajo.
    -- Si no hay suelo, temporariamente reactivamos colisión para caer al suelo.
    RunService.Stepped:Connect(function()
        if not activeNoclip then return end
        local char = player.Character
        if char then
            local humanoid = char:FindFirstChildOfClass("Humanoid")
            local hrp = char:FindFirstChild("HumanoidRootPart")
            if humanoid and hrp then
                if humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                    -- Raycast hacia abajo unos studs para ver si hay suelo cercano
                    local origin = hrp.Position
                    local dir = Vector3.new(0, -5, 0)
                    local ray = Workspace:Raycast(origin, dir)
                    if not ray then
                        -- no suelo cercano — permitir caer
                        for part, _ in pairs(originalCollisions) do
                            if part and part.Parent then
                                part.CanCollide = true
                            end
                        end
                    else
                        -- hay suelo cercano: restoramos colisiones del personaje
                        for part, _ in pairs(originalCollisions) do
                            if part and part.Parent then
                                part.CanCollide = false
                            end
                        end
                    end
                end
            end
        end
    end)
end

-- Función para desactivar noclip y restaurar colisiones
local function disableNoclip()
    local character = player.Character
    if not character then return end
    for part, _ in pairs(originalCollisions) do
        if part and part.Parent then
            part.CanCollide = true
        end
    end
    originalCollisions = {}
    activeNoclip = false
end

-- Conexiones de botones
platBtn.MouseButton1Click:Connect(function()
    activePlat = not activePlat
    if activePlat then
        platBtn.Text = "Desactivar Plataforma"
        monitorJumping()
    else
        platBtn.Text = "Activar Plataforma"
        if currentPlatform then
            currentPlatform:Destroy()
            currentPlatform = nil
        end
    end
end)

noclipBtn.MouseButton1Click:Connect(function()
    activeNoclip = not activeNoclip
    if activeNoclip then
        noclipBtn.Text = "Desactivar Noclip"
        enableNoclip()
    else
        noclipBtn.Text = "Activar Noclip"
        disableNoclip()
    end
end)

-- Minimizar / desplegar menú
toggleMenuButton.MouseButton1Click:Connect(function()
    if mainFrame.Visible then
        mainFrame.Visible = false
        floatButton.Visible = true
    else
        mainFrame.Visible = true
        floatButton.Visible = false
    end
end)

floatButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = true
    floatButton.Visible = false
end)

-- Arrastrar GUI principal
do
    local dragging = false
    local dragStart = Vector2.new()
    local startPos = UDim2.new()

    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)
    titleBar.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                start Pos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
    titleBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
end

-- Arrastrar botón flotante
do
    local draggingFB = false
    local dragStartFB = Vector2.new()
    local startPosFB = floatButton.Position

    floatButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            draggingFB = true
            dragStartFB = input.Position
            startPosFB = floatButton.Position
        end
    end)
    floatButton.InputChanged:Connect(function(input)
        if draggingFB and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStartFB
            floatButton.Position = UDim2.new(
                startPosFB.X.Scale,
                startPosFB.X.Offset + delta.X,
                startPosFB.Y.Scale,
                startPosFB.Y.Offset + delta.Y
            )
        end
    end)
    floatButton.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            draggingFB = false
        end
    end)
end

-- Cuando el personaje reaparece, reactivar si estaban activos
player.CharacterAdded:Connect(function()
    if activePlat then
        wait(1)
        monitorJumping()
    end
    if activeNoclip then
        enableNoclip()
    end
end)
